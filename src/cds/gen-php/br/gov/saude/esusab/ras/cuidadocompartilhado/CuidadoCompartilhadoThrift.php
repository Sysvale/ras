<?php
namespace br\gov\saude\esusab\ras\cuidadocompartilhado;

/**
 * Autogenerated by Thrift Compiler (0.19.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;

class CuidadoCompartilhadoThrift
{
    static public $isValidate = false;

    static public $_TSPEC = array(
        1 => array(
            'var' => 'uuidEvolucao',
            'isRequired' => true,
            'type' => TType::STRING,
        ),
        2 => array(
            'var' => 'lotacaoEvolucao',
            'isRequired' => false,
            'type' => TType::STRUCT,
            'class' => '\br\gov\saude\esusab\ras\common\LotacaoThrift',
        ),
        3 => array(
            'var' => 'dataEvolucao',
            'isRequired' => false,
            'type' => TType::I64,
        ),
        4 => array(
            'var' => 'dataEvolucaoAnterior',
            'isRequired' => false,
            'type' => TType::I64,
        ),
        5 => array(
            'var' => 'coSequencialEvolucao',
            'isRequired' => false,
            'type' => TType::I32,
        ),
        6 => array(
            'var' => 'condutaEvolucao',
            'isRequired' => false,
            'type' => TType::I64,
        ),
        7 => array(
            'var' => 'tpCdsOrigem',
            'isRequired' => false,
            'type' => TType::I32,
        ),
        8 => array(
            'var' => 'cnsCidadao',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
        9 => array(
            'var' => 'cpfCidadao',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
        10 => array(
            'var' => 'sexoCidadao',
            'isRequired' => false,
            'type' => TType::I64,
        ),
        11 => array(
            'var' => 'dataNascimentoCidadao',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
        12 => array(
            'var' => 'uuidCuidadoCompartilhado',
            'isRequired' => true,
            'type' => TType::STRING,
        ),
        13 => array(
            'var' => 'solicitante',
            'isRequired' => false,
            'type' => TType::STRUCT,
            'class' => '\br\gov\saude\esusab\ras\common\LotacaoThrift',
        ),
        14 => array(
            'var' => 'executante',
            'isRequired' => false,
            'type' => TType::STRUCT,
            'class' => '\br\gov\saude\esusab\ras\common\LotacaoThrift',
        ),
        15 => array(
            'var' => 'dataCriacaoCuidado',
            'isRequired' => false,
            'type' => TType::I64,
        ),
        16 => array(
            'var' => 'cid10',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
        17 => array(
            'var' => 'ciap',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
        18 => array(
            'var' => 'uuidFichaOrigem',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
        19 => array(
            'var' => 'tpDadoTranspFichaOrigem',
            'isRequired' => false,
            'type' => TType::I32,
        ),
        20 => array(
            'var' => 'prioridadeCuidado',
            'isRequired' => false,
            'type' => TType::I32,
        ),
        21 => array(
            'var' => 'reclassificacaoPrioridadeCuidado',
            'isRequired' => false,
            'type' => TType::I32,
        ),
    );

    /**
     * @var string
     */
    public $uuidEvolucao = null;
    /**
     * @var \br\gov\saude\esusab\ras\common\LotacaoThrift
     */
    public $lotacaoEvolucao = null;
    /**
     * @var int
     */
    public $dataEvolucao = null;
    /**
     * @var int
     */
    public $dataEvolucaoAnterior = null;
    /**
     * @var int
     */
    public $coSequencialEvolucao = null;
    /**
     * @var int
     */
    public $condutaEvolucao = null;
    /**
     * @var int
     */
    public $tpCdsOrigem = null;
    /**
     * @var string
     */
    public $cnsCidadao = null;
    /**
     * @var string
     */
    public $cpfCidadao = null;
    /**
     * @var int
     */
    public $sexoCidadao = null;
    /**
     * @var string
     */
    public $dataNascimentoCidadao = null;
    /**
     * @var string
     */
    public $uuidCuidadoCompartilhado = null;
    /**
     * @var \br\gov\saude\esusab\ras\common\LotacaoThrift
     */
    public $solicitante = null;
    /**
     * @var \br\gov\saude\esusab\ras\common\LotacaoThrift
     */
    public $executante = null;
    /**
     * @var int
     */
    public $dataCriacaoCuidado = null;
    /**
     * @var string
     */
    public $cid10 = null;
    /**
     * @var string
     */
    public $ciap = null;
    /**
     * @var string
     */
    public $uuidFichaOrigem = null;
    /**
     * @var int
     */
    public $tpDadoTranspFichaOrigem = null;
    /**
     * @var int
     */
    public $prioridadeCuidado = null;
    /**
     * @var int
     */
    public $reclassificacaoPrioridadeCuidado = null;

    public function __construct($vals = null)
    {
        if (is_array($vals)) {
            if (isset($vals['uuidEvolucao'])) {
                $this->uuidEvolucao = $vals['uuidEvolucao'];
            }
            if (isset($vals['lotacaoEvolucao'])) {
                $this->lotacaoEvolucao = $vals['lotacaoEvolucao'];
            }
            if (isset($vals['dataEvolucao'])) {
                $this->dataEvolucao = $vals['dataEvolucao'];
            }
            if (isset($vals['dataEvolucaoAnterior'])) {
                $this->dataEvolucaoAnterior = $vals['dataEvolucaoAnterior'];
            }
            if (isset($vals['coSequencialEvolucao'])) {
                $this->coSequencialEvolucao = $vals['coSequencialEvolucao'];
            }
            if (isset($vals['condutaEvolucao'])) {
                $this->condutaEvolucao = $vals['condutaEvolucao'];
            }
            if (isset($vals['tpCdsOrigem'])) {
                $this->tpCdsOrigem = $vals['tpCdsOrigem'];
            }
            if (isset($vals['cnsCidadao'])) {
                $this->cnsCidadao = $vals['cnsCidadao'];
            }
            if (isset($vals['cpfCidadao'])) {
                $this->cpfCidadao = $vals['cpfCidadao'];
            }
            if (isset($vals['sexoCidadao'])) {
                $this->sexoCidadao = $vals['sexoCidadao'];
            }
            if (isset($vals['dataNascimentoCidadao'])) {
                $this->dataNascimentoCidadao = $vals['dataNascimentoCidadao'];
            }
            if (isset($vals['uuidCuidadoCompartilhado'])) {
                $this->uuidCuidadoCompartilhado = $vals['uuidCuidadoCompartilhado'];
            }
            if (isset($vals['solicitante'])) {
                $this->solicitante = $vals['solicitante'];
            }
            if (isset($vals['executante'])) {
                $this->executante = $vals['executante'];
            }
            if (isset($vals['dataCriacaoCuidado'])) {
                $this->dataCriacaoCuidado = $vals['dataCriacaoCuidado'];
            }
            if (isset($vals['cid10'])) {
                $this->cid10 = $vals['cid10'];
            }
            if (isset($vals['ciap'])) {
                $this->ciap = $vals['ciap'];
            }
            if (isset($vals['uuidFichaOrigem'])) {
                $this->uuidFichaOrigem = $vals['uuidFichaOrigem'];
            }
            if (isset($vals['tpDadoTranspFichaOrigem'])) {
                $this->tpDadoTranspFichaOrigem = $vals['tpDadoTranspFichaOrigem'];
            }
            if (isset($vals['prioridadeCuidado'])) {
                $this->prioridadeCuidado = $vals['prioridadeCuidado'];
            }
            if (isset($vals['reclassificacaoPrioridadeCuidado'])) {
                $this->reclassificacaoPrioridadeCuidado = $vals['reclassificacaoPrioridadeCuidado'];
            }
        }
    }

    public function getName()
    {
        return 'CuidadoCompartilhadoThrift';
    }


    public function read($input)
    {
        $xfer = 0;
        $fname = null;
        $ftype = 0;
        $fid = 0;
        $xfer += $input->readStructBegin($fname);
        while (true) {
            $xfer += $input->readFieldBegin($fname, $ftype, $fid);
            if ($ftype == TType::STOP) {
                break;
            }
            switch ($fid) {
                case 1:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->uuidEvolucao);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 2:
                    if ($ftype == TType::STRUCT) {
                        $this->lotacaoEvolucao = new \br\gov\saude\esusab\ras\common\LotacaoThrift();
                        $xfer += $this->lotacaoEvolucao->read($input);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 3:
                    if ($ftype == TType::I64) {
                        $xfer += $input->readI64($this->dataEvolucao);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 4:
                    if ($ftype == TType::I64) {
                        $xfer += $input->readI64($this->dataEvolucaoAnterior);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 5:
                    if ($ftype == TType::I32) {
                        $xfer += $input->readI32($this->coSequencialEvolucao);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 6:
                    if ($ftype == TType::I64) {
                        $xfer += $input->readI64($this->condutaEvolucao);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 7:
                    if ($ftype == TType::I32) {
                        $xfer += $input->readI32($this->tpCdsOrigem);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 8:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->cnsCidadao);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 9:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->cpfCidadao);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 10:
                    if ($ftype == TType::I64) {
                        $xfer += $input->readI64($this->sexoCidadao);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 11:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->dataNascimentoCidadao);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 12:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->uuidCuidadoCompartilhado);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 13:
                    if ($ftype == TType::STRUCT) {
                        $this->solicitante = new \br\gov\saude\esusab\ras\common\LotacaoThrift();
                        $xfer += $this->solicitante->read($input);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 14:
                    if ($ftype == TType::STRUCT) {
                        $this->executante = new \br\gov\saude\esusab\ras\common\LotacaoThrift();
                        $xfer += $this->executante->read($input);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 15:
                    if ($ftype == TType::I64) {
                        $xfer += $input->readI64($this->dataCriacaoCuidado);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 16:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->cid10);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 17:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->ciap);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 18:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->uuidFichaOrigem);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 19:
                    if ($ftype == TType::I32) {
                        $xfer += $input->readI32($this->tpDadoTranspFichaOrigem);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 20:
                    if ($ftype == TType::I32) {
                        $xfer += $input->readI32($this->prioridadeCuidado);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 21:
                    if ($ftype == TType::I32) {
                        $xfer += $input->readI32($this->reclassificacaoPrioridadeCuidado);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                default:
                    $xfer += $input->skip($ftype);
                    break;
            }
            $xfer += $input->readFieldEnd();
        }
        $xfer += $input->readStructEnd();
        return $xfer;
    }

    public function write($output)
    {
        $xfer = 0;
        $xfer += $output->writeStructBegin('CuidadoCompartilhadoThrift');
        if ($this->uuidEvolucao !== null) {
            $xfer += $output->writeFieldBegin('uuidEvolucao', TType::STRING, 1);
            $xfer += $output->writeString($this->uuidEvolucao);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->lotacaoEvolucao !== null) {
            if (!is_object($this->lotacaoEvolucao)) {
                throw new TProtocolException('Bad type in structure.', TProtocolException::INVALID_DATA);
            }
            $xfer += $output->writeFieldBegin('lotacaoEvolucao', TType::STRUCT, 2);
            $xfer += $this->lotacaoEvolucao->write($output);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->dataEvolucao !== null) {
            $xfer += $output->writeFieldBegin('dataEvolucao', TType::I64, 3);
            $xfer += $output->writeI64($this->dataEvolucao);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->dataEvolucaoAnterior !== null) {
            $xfer += $output->writeFieldBegin('dataEvolucaoAnterior', TType::I64, 4);
            $xfer += $output->writeI64($this->dataEvolucaoAnterior);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->coSequencialEvolucao !== null) {
            $xfer += $output->writeFieldBegin('coSequencialEvolucao', TType::I32, 5);
            $xfer += $output->writeI32($this->coSequencialEvolucao);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->condutaEvolucao !== null) {
            $xfer += $output->writeFieldBegin('condutaEvolucao', TType::I64, 6);
            $xfer += $output->writeI64($this->condutaEvolucao);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->tpCdsOrigem !== null) {
            $xfer += $output->writeFieldBegin('tpCdsOrigem', TType::I32, 7);
            $xfer += $output->writeI32($this->tpCdsOrigem);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->cnsCidadao !== null) {
            $xfer += $output->writeFieldBegin('cnsCidadao', TType::STRING, 8);
            $xfer += $output->writeString($this->cnsCidadao);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->cpfCidadao !== null) {
            $xfer += $output->writeFieldBegin('cpfCidadao', TType::STRING, 9);
            $xfer += $output->writeString($this->cpfCidadao);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->sexoCidadao !== null) {
            $xfer += $output->writeFieldBegin('sexoCidadao', TType::I64, 10);
            $xfer += $output->writeI64($this->sexoCidadao);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->dataNascimentoCidadao !== null) {
            $xfer += $output->writeFieldBegin('dataNascimentoCidadao', TType::STRING, 11);
            $xfer += $output->writeString($this->dataNascimentoCidadao);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->uuidCuidadoCompartilhado !== null) {
            $xfer += $output->writeFieldBegin('uuidCuidadoCompartilhado', TType::STRING, 12);
            $xfer += $output->writeString($this->uuidCuidadoCompartilhado);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->solicitante !== null) {
            if (!is_object($this->solicitante)) {
                throw new TProtocolException('Bad type in structure.', TProtocolException::INVALID_DATA);
            }
            $xfer += $output->writeFieldBegin('solicitante', TType::STRUCT, 13);
            $xfer += $this->solicitante->write($output);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->executante !== null) {
            if (!is_object($this->executante)) {
                throw new TProtocolException('Bad type in structure.', TProtocolException::INVALID_DATA);
            }
            $xfer += $output->writeFieldBegin('executante', TType::STRUCT, 14);
            $xfer += $this->executante->write($output);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->dataCriacaoCuidado !== null) {
            $xfer += $output->writeFieldBegin('dataCriacaoCuidado', TType::I64, 15);
            $xfer += $output->writeI64($this->dataCriacaoCuidado);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->cid10 !== null) {
            $xfer += $output->writeFieldBegin('cid10', TType::STRING, 16);
            $xfer += $output->writeString($this->cid10);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->ciap !== null) {
            $xfer += $output->writeFieldBegin('ciap', TType::STRING, 17);
            $xfer += $output->writeString($this->ciap);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->uuidFichaOrigem !== null) {
            $xfer += $output->writeFieldBegin('uuidFichaOrigem', TType::STRING, 18);
            $xfer += $output->writeString($this->uuidFichaOrigem);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->tpDadoTranspFichaOrigem !== null) {
            $xfer += $output->writeFieldBegin('tpDadoTranspFichaOrigem', TType::I32, 19);
            $xfer += $output->writeI32($this->tpDadoTranspFichaOrigem);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->prioridadeCuidado !== null) {
            $xfer += $output->writeFieldBegin('prioridadeCuidado', TType::I32, 20);
            $xfer += $output->writeI32($this->prioridadeCuidado);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->reclassificacaoPrioridadeCuidado !== null) {
            $xfer += $output->writeFieldBegin('reclassificacaoPrioridadeCuidado', TType::I32, 21);
            $xfer += $output->writeI32($this->reclassificacaoPrioridadeCuidado);
            $xfer += $output->writeFieldEnd();
        }
        $xfer += $output->writeFieldStop();
        $xfer += $output->writeStructEnd();
        return $xfer;
    }
}
